---
# Pulse for ESPHome
#
# Read your electricity meter by means of the pulse LED on your
# meter, useful if you do not have a serial port (P1).
#
# Original Project: Home Assistant Glow
#  
#  Â© Klaas Schoute
# Adaptated as "Pulse for ESPHome"
#  Paul Schulz

substitutions:
  device_name: pulse-for-esphome
  friendly_name: Pulse for ESPHome
  project_version: "1.0.0"
  device_description: |
    Measure your energy consumption with the pulse LED on your electricity meter.
  
  # Define the GPIO pins
  pulse_pin:  GPIO1
  pulse2_pin: GPIO3
  pulse3_pin: GPIO5
  pulse4_pin: GPIO7
  pulse_led:  GPIO9
  status_led: GPIO21

esphome:
  name: pulse-for-esphome
  name_add_mac_suffix: true

  on_boot:
    priority: -10
    then:
      - text_sensor.template.publish:
          id: firmware_version
          state: !lambda 'return {"${project_version}"};'
  
esp32:
  # board: m5stack-stamps3
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

logger:

packages:
  pulse_meter:  !include components/pulse_meter.yaml

wifi:
# Allow provisioning Wi-Fi via Serial USB
improv_serial:
# Allow provisioning Wi-Fi via BLE
esp32_improv:
  authorizer: none
api:
ota:
  - platform: esphome
  - platform: web_server

web_server:
  port: 80
  version: 3
  local: true
###################################################################################
script:
  - id: pulse
    then:
      - light.addressable_set:
          id: pulse_led
          range_from: 0
          range_to: 1
          red: 100%
          green: 100%
          blue: 100%
      - delay: 50ms
      - light.addressable_set:
          id: pulse_led
          range_from: 0
          range_to: 1
          red: 0%
          green: 0%
          blue: 0%
###################################################################################
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: "User Button"
    id: user_button
    disabled_by_default: false
    on_multi_click:
      - timing:
          - ON for at least 4s
        then:
          - light.addressable_set:
              id: status_led
              range_from: 0
              range_to: 1
              red: 100%
              green: 100%
              blue: 100%
          - delay: 50ms
          - light.addressable_set:
              id: status_led
              range_from: 0
              range_to: 1
              red: 0%
              green: 0%
              blue: 0%
          - button.press: reset

###################################################################################
light:
#  - platform: esp32_rmt_led_strip
#    name: "Status LED"
#    id: status_led
#    rgb_order: GRB
#    pin: ${status_led}
#    num_leds: 1
#    rmt_channel: 1
#    chipset: ws2812

#  - platform: esp32_rmt_led_strip
#    name: "Pulse LED"
#    id: pulse_led
#    rgb_order: RGB
#    pin: ${pulse_led}
#    num_leds: 1
#    rmt_channel: 2
#    chipset: ws2812
#    color_correct: [85%,85%,85%]

#  - platform: neopixelbus
#    name: "Status LED"
#    id: status_led
#    pin: ${status_led}
#    type: GRB
#    variant: WS2812
#    num_leds: 1

# - platform: neopixelbus
#   name: "Pulse LED"
#   id: pulse_led
#    pin: ${pulse_led}
#    type: RGB
#    variant: WS2812
#    num_leds: 1

  - platform: fastled_clockless
    name: "Status LED"
    id: status_led
    pin: ${status_led}
    chipset: WS2812
    rgb_order: GRB
    num_leds: 1
#    default_transition_length: 0s

  - platform: fastled_clockless
    name: "Pulse LED"
    id: pulse_led
    pin: ${pulse_led}
    chipset: WS2812
    rgb_order: RGB
    num_leds: 1
#    default_transition_length: 0s

button:
  - platform: template
    name: "Test Pulse"
    on_press:
      -  script.execute: pulse
    # Restarted the ESP
  - platform: restart
    name: "Restart"

  - platform: factory_reset
    name: Restart with Factory Default Settings
    id: reset

text_sensor:
  - platform: template
    name: "Firmware Version"
    id: firmware_version
    icon: "mdi:label-outline"
    entity_category: diagnostic
    lambda: |-
      return {"${project_version}"};
    update_interval: 6h
